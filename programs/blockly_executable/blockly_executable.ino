/** ############################# Robot Name ############################## **\
|** ~~~~~~~~~~~~~~~~~~~~~~~~~~~~**************~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ **|
|** ~~~~~~~~~~~~~~~~~~~~~~~~~~~/              \~~~~~~~~~~~~~~~~~~~~~~~~~~~~ **|
|** =========================={ grabber sensor }=========================== **|
|** ~~~~~~~~~~~~~~~~~~~~~~~~~~~\              /~~~~~~~~~~~~~~~~~~~~~~~~~~~~ **|
|** ~~~~~~~~~~~~~~~~~~~~~~~~~~~~**************~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ **|
\** ###########################[[[[[[[^_^]]]]]]]########################### **/


/** ======================================================================= **\
|** ------------------------------ Libraries ------------------------------ **|
\** ======================================================================= **/

#include "grabber-sensor.h"
#include <Gadgetron.h>
/** ======================================================================= **\
|** --------------------------- Setup Function ---------------------------- **|
|** %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% **|
|** ............................. Description ............................. **|
|** The setup() function runs --ONCE-- when the Arduino boots up. As the    **|
|** name implies, it's useful to add code that 'sets up' your Gadget to     **|
|** run correctly.                                                          **|
|** %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% **|
\** ======================================================================= **/

void setup () {
    distanceSensor.setup();
    drive.setup();
}

/** ======================================================================= **\
|** ---------------------------- Loop Function ---------------------------- **|
|** %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% **|
|** ............................. Description ............................. **|
|** The loop() function runs continuously after the setup() function        **|
|** finishes and while the Arduino is running. In other words, this         **|
|** function is called repeatly over and over again when it reaches the     **|
|** end of the function. This function is where the majority of your        **|
|** program's logic should go.                                              **|
|** %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% **|
\** ======================================================================= **/

void loop () {
  ;
  int __index_0;
  for(__index_0 = 0; __index_0 < 10; __index_0) {
    if(distanceSensor.get_distance() < 5) {
      drive.stop();
    };
    ;
    int __index_1;
    for(__index_1 = 0; __index_1 < 10; __index_1) {
      if(distanceSensor.get_distance() < 5) {
        drive.stop();
      };
    }
;
  }
;
  ;
  int __index_2;
  for(__index_2 = 0; __index_2 < 10; __index_2) {
    if(distanceSensor.get_distance() < 5) {
      drive.stop();
    };
  }
;
  ;
  int __index_3;
  for(__index_3 = 0; __index_3 < 10; __index_3) {
    if(distanceSensor.get_distance() < 5) {
      drive.stop();
    };
  }
;
}
