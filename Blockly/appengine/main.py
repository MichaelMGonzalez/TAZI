import wsgiref.simple_server
import webapp2
import StaticHandler
from Handlers import *

INDEX = "static/index.html"
api_gspec = "HotlineBling.api.gspec"
#out_file = "HotlineBling/HotlineBling.ino"
STATIC = StaticHandler.STATIC

############################# Main Functions ############################# 
def main (app):
    port = 8080
    httpd = wsgiref.simple_server.make_server('', port, app)
    print "Serving HTTP on port "+str(port)+"..."
    httpd.serve_forever()

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description="From a gspec and a component library, compiles a schematic and semi-placed board.")
    parser.add_argument("-s", "--static_files", type=str, nargs="*", default="static_files.xml", help="the complete list of static files that will be served by the server")
    parser.add_argument("-n", "--program_name", type=str,  default="testfile", help="The name of the program generated by the server")
    parser.add_argument("-e", "--program_ext", type=str, default="cpp", help="The file extention of the intermediary file generated by the server")
    args = parser.parse_args()
    setupOutput( name=args.program_name, ext=args.program_ext )
    STATIC, files = StaticHandler.parseStaticFiles( args.static_files )
    app = webapp2.WSGIApplication([ 
	("/compile", CompileCPPHandler),
	#("/compile", CompileInoHandler),
	("/newprogram", NewProgramHandler),
	("/", StaticHandler.createHandler("landing.html")),
	("/ide", StaticHandler.createHandler("index.html")),
	(r'/static/(.+)', StaticFileHandler),
	]    , debug=True)
    main(app)

