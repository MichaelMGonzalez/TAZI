<head>
	<title>TAZI - A blockly extention for Gadgetron</title>
	<script src="{{resDir}}blockly_compressed.js"></script>
	<script src="{{resDir}}blocks_compressed.js"></script>
	<script src="{{resDir}}custom_blocks.js"></script>
	<script src="{{resDir}}msg/js/en.js"></script>
	<script src="{{resDir}}jquery-2.2.1.min.js"></script>
	<script src="{{resDir}}Requests.js"></script>
	<script type="text/javascript">
	{% for block in blocklist %}
		var {{block[0]}} = {{block[1]}};
	{% endfor %}
	{% for block in blocklist %}
		Blockly.Blocks['{{block[0]}}'] = {
		init: function() {
			this.jsonInit({{block[0]}});
		}
	};
	{% endfor %}
	</script>
	
	<!--style>
	.outer {
		background-color: #009933;
		padding: 5px;
	}
	h1 {color:blue;}
	</style-->
	
</head>
<body>
	<div width="100%" height="100%">
	
	<div class = "outer", style="width:20%; height:10%; float:left;">
		<img src="{{resDir}}GtronImage.png" alt="Gtron Logo" style="width:auto;height:auto;">		
	</div>
	
	<div class = "outer", style = "margin-left:20%; width: 70%; height: 10%">
		<h1 font-family="sans-serif"> TAZI - A Blockly Programming Environment for Robots</h1>
	</div>
	
	<div id="blocklyDiv" style="height: 85%; width: 100%;"></div>
		{{toolbox}}
	</div>
	<script>
  		var workspace = Blockly.inject('blocklyDiv',
      		{toolbox: document.getElementById('toolbox')});
	</script>
	<button onclick="console.log(Blockly.Xml.workspaceToDom(Blockly.getMainWorkspace()))">Dump XML</button>
	<button>Save Program</button>
	<button onclick="testPost()">Compile</button>
    <input type="file" id="xmlinput" />
    <script src="{{resDir}}BlocksIO.js"></script>
</body>
