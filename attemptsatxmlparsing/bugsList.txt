 ***JUST A NOTE******
   Has a loop body (even though it may be empty)
   -It does compile but not sure if that's how we want it to be since it's not normal
$$$-------------------------------------------------------------------------
2.a)tests/LogicTests/EqualWNums.xml
    Got error:
	Traceback (most recent call last):
	  File "./blocklyTranslator.py", line 346, in <module>
	    print(recurseParse(root,0))
	  File "./blocklyTranslator.py", line 41, in recurseParse
	    overallResult += "\n" + recurseParse(child, depth)
	  File "./blocklyTranslator.py", line 47, in recurseParse
	    return getBlock(node,depth)
	  File "./blocklyTranslator.py", line 79, in getBlock
	    return recurseParseCheck(list(node), depth)
	  File "./blocklyTranslator.py", line 66, in recurseParseCheck
	    return recurseParse(nodeList[0], depth)
	  File "./blocklyTranslator.py", line 49, in recurseParse
	    return "\n" + recurseParse(list(node)[0], depth)
	  File "./blocklyTranslator.py", line 47, in recurseParse
	    return getBlock(node,depth)
	  File "./blocklyTranslator.py", line 82, in getBlock
	    return funcGet[blockType](node,depth)
	  File "./blocklyTranslator.py", line 202, in ifBlock
	    statementPart = recurseParse(list(node)[1], depth+1)
	IndexError: list index out of range
$$$--------------------------------------------------------------
 2 .b) tests/LogicTests/NotEqualWNums.xml
    Got error: 
      Traceback (most recent call last):
 	 File "./blocklyTranslator.py", line 346, in <module>
 	   print(recurseParse(root,0))
 	 File "./blocklyTranslator.py", line 41, in recurseParse
 	   overallResult += "\n" + recurseParse(child, depth)
	  File "./blocklyTranslator.py", line 47, in recurseParse
	    return getBlock(node,depth)
	  File "./blocklyTranslator.py", line 79, in getBlock
	    return recurseParseCheck(list(node), depth)
	  File "./blocklyTranslator.py", line 66, in recurseParseCheck
	    return recurseParse(nodeList[0], depth)
	  File "./blocklyTranslator.py", line 49, in recurseParse
	    return "\n" + recurseParse(list(node)[0], depth)
	  File "./blocklyTranslator.py", line 47, in recurseParse
	    return getBlock(node,depth)
	  File "./blocklyTranslator.py", line 82, in getBlock
	    return funcGet[blockType](node,depth)
	  File "./blocklyTranslator.py", line 202, in ifBlock
	    statementPart = recurseParse(list(node)[1], depth+1)
	IndexError: list index out of range
$$$--------------------------------------------------------------
2.f) tests/Logic/TestsOne Variable with equal sign
  Got error: 
Traceback (most recent call last):
  File "./blocklyTranslator.py", line 346, in <module>
    print(recurseParse(root,0))
  File "./blocklyTranslator.py", line 41, in recurseParse
    overallResult += "\n" + recurseParse(child, depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 79, in getBlock
    return recurseParseCheck(list(node), depth)
  File "./blocklyTranslator.py", line 66, in recurseParseCheck
    return recurseParse(nodeList[0], depth)
  File "./blocklyTranslator.py", line 49, in recurseParse
    return "\n" + recurseParse(list(node)[0], depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 82, in getBlock
    return funcGet[blockType](node,depth)
  File "./blocklyTranslator.py", line 194, in setVar
    return blockNext(node, depth, totString)
  File "./blocklyTranslator.py", line 119, in blockNext
    return (spaces * depth) + nodeStr + recurseParse(list(node)[-1], depth)
  File "./blocklyTranslator.py", line 49, in recurseParse
    return "\n" + recurseParse(list(node)[0], depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 82, in getBlock
    return funcGet[blockType](node,depth)
  File "./blocklyTranslator.py", line 202, in ifBlock
    statementPart = recurseParse(list(node)[1], depth+1)
IndexError: list index out of range
$$$-------------------------------------------------------------
2.aa. tests/LogicTests/TTandTest.xml
    Error: Block logic_boolean is malformatted!
$$$--------------------------------------------------------------
2.ee. tests/LogicTests/TTorTest.xml
    Error: Block logic_boolean is malformatted!    
$$$---------------------------------------------------------------
3. a. tests/MathTests/Add2Nums
Traceback (most recent call last):
  File "./blocklyTranslator.py", line 346, in <module>
    print(recurseParse(root,0))
  File "./blocklyTranslator.py", line 41, in recurseParse
    overallResult += "\n" + recurseParse(child, depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 79, in getBlock
    return recurseParseCheck(list(node), depth)
  File "./blocklyTranslator.py", line 66, in recurseParseCheck
    return recurseParse(nodeList[0], depth)
  File "./blocklyTranslator.py", line 49, in recurseParse
    return "\n" + recurseParse(list(node)[0], depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 82, in getBlock
    return funcGet[blockType](node,depth)
  File "./blocklyTranslator.py", line 190, in setVar
    varType = getType(list(list(node)[1])[0])
  File "./blocklyTranslator.py", line 145, in getType
    return typeDict[node.attrib["type"]]
	KeyError: 'math_arithmetic'
$$$-----------------------------------------------------   
3. g. tests/MathTests/sRootNum.xml
Traceback (most recent call last):
  File "./blocklyTranslator.py", line 346, in <module>
    print(recurseParse(root,0))
  File "./blocklyTranslator.py", line 41, in recurseParse
    overallResult += "\n" + recurseParse(child, depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 79, in getBlock
    return recurseParseCheck(list(node), depth)
  File "./blocklyTranslator.py", line 66, in recurseParseCheck
    return recurseParse(nodeList[0], depth)
  File "./blocklyTranslator.py", line 49, in recurseParse
    return "\n" + recurseParse(list(node)[0], depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 82, in getBlock
    return funcGet[blockType](node,depth)
  File "./blocklyTranslator.py", line 190, in setVar
    varType = getType(list(list(node)[1])[0])
  File "./blocklyTranslator.py", line 145, in getType
    return typeDict[node.attrib["type"]]
KeyError: 'math_single'
$$$-------------------------------------------------------------
3.gg. tests/MathTests/round2Nums.xml
Traceback (most recent call last):
  File "./blocklyTranslator.py", line 346, in <module>
    print(recurseParse(root,0))
  File "./blocklyTranslator.py", line 41, in recurseParse
    overallResult += "\n" + recurseParse(child, depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 79, in getBlock
    return recurseParseCheck(list(node), depth)
  File "./blocklyTranslator.py", line 66, in recurseParseCheck
    return recurseParse(nodeList[0], depth)
  File "./blocklyTranslator.py", line 49, in recurseParse
    return "\n" + recurseParse(list(node)[0], depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 82, in getBlock
    return funcGet[blockType](node,depth)
  File "./blocklyTranslator.py", line 190, in setVar
    varType = getType(list(list(node)[1])[0])
  File "./blocklyTranslator.py", line 145, in getType
    return typeDict[node.attrib["type"]]
KeyError: 'math_round'
$$$-------------------------------------------------------
3. kk. tests/MathTests/rand2Nums.xml
Traceback (most recent call last):
  File "./blocklyTranslator.py", line 346, in <module>
    print(recurseParse(root,0))
  File "./blocklyTranslator.py", line 41, in recurseParse
    overallResult += "\n" + recurseParse(child, depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 79, in getBlock
    return recurseParseCheck(list(node), depth)
  File "./blocklyTranslator.py", line 66, in recurseParseCheck
    return recurseParse(nodeList[0], depth)
  File "./blocklyTranslator.py", line 49, in recurseParse
    return "\n" + recurseParse(list(node)[0], depth)
  File "./blocklyTranslator.py", line 47, in recurseParse
    return getBlock(node,depth)
  File "./blocklyTranslator.py", line 82, in getBlock
    return funcGet[blockType](node,depth)
  File "./blocklyTranslator.py", line 190, in setVar
    varType = getType(list(list(node)[1])[0])
  File "./blocklyTranslator.py", line 145, in getType
    return typeDict[node.attrib["type"]]
KeyError: 'math_random_int'
$$$------------------------------------------------------------------
4. a. tests/customBlocks/Buzzer2Nums.xml
Error: Block _Buzzer_playNote is malformatted!
$$$---------------------------------------------------------------
